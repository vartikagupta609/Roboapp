{"version":3,"sources":["cardList.js","Search.js","Popup.js","Scroll.js","App.js","Card.js","reportWebVitals.js","index.js"],"names":["CardList","robots","popupwindow","cardComponent","map","user","i","id","name","email","popupfun","Search","searchrobo","className","type","placeholder","onChange","Popup","closepopup","image","onClick","src","width","height","Scroll","props","style","overflowY","children","App","onSearchChange","event","setState","searchfield","target","value","popups","currentImage","parentNode","currentName","innerText","console","log","popup","state","message","fetch","then","resp","json","filteredRobots","this","filter","robot","toLowerCase","includes","Fragment","React","Component","Card","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e452bcaa.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList=({robots,popupwindow})=>{\r\n\r\n     const cardComponent= robots.map((user,i) => {\r\n         return <Card id={robots[i].id} name={robots[i].name} email={robots[i].email} key={i} popupfun={popupwindow}/>\r\n       })\r\n  return(\r\n      <div>\r\n      {/*<Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n      <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/>\r\n      <Card id={robots[3].id} name={robots[3].name} email={robots[3].email}/>   */}\r\n {cardComponent}\r\n      </div>\r\n     \r\n  )\r\n} \r\n\r\nexport default CardList;","import React from 'react';\r\nimport './card.css';\r\n\r\nconst Search=({searchrobo})=>{\r\n    return(\r\n        <input className=\"pa3 ba b-green bg-light-blue \" type=\"Search\" placeholder=\"Search Robots...\" onChange={searchrobo}/>\r\n    )\r\n}\r\nexport default Search","import React from 'react';\r\nimport './card.css';\r\nimport {robots} from './robots'\r\nimport Card from './Card'\r\n\r\nconst Popup=({closepopup,image,name,email})=>{\r\n\r\n    return(\r\n        <div className=\"popup-back\">\r\n         <div className=\"popup-content\">\r\n             <div className=\"popup-close\" onClick={closepopup}>‚ùå</div>  \r\n             <div>\r\n                  <div>\r\n                  <img  src={image} width=\"200\" height=\"200\"/>\r\n                  </div>\r\n                  <div>\r\n                  <h4>{name}</h4>\r\n                  <h6>{email}</h6>\r\n                  </div>\r\n             </div>\r\n              \r\n         </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Popup;","import React from 'react'\r\n\r\nconst Scroll=(props)=>{\r\n\r\n   return(\r\n      <div style={{overflowY: 'scroll', height : '500px'}}>\r\n      {props.children}\r\n          </div>\r\n\r\n   )\r\n\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from './cardList';\r\nimport './card.css';\r\nimport {robots} from './robots'\r\nimport Search from './Search'\r\nimport Card from './Card' \r\nimport Popup from './Popup'\r\nimport Scroll from './Scroll'\r\n\r\nclass App extends React.Component{\r\n\r\nconstructor(props){\r\n  super(props)\r\n  this.state={\r\n    message:\"ROBOFANS\",\r\n    robots:[],\r\n    searchfield:\"\",\r\n    currentImage:\"\",\r\n    currentName:\"\",\r\n    popup:false\r\n  }\r\n};\r\n\r\nonSearchChange=(event)=>{\r\n  this.setState({searchfield : event.target.value});\r\n}\r\npopups=(event)=>{\r\n  let currentImage=event.target.parentNode.children[0].src;\r\n  let currentName=event.target.parentNode.children[1].children[0].innerText;\r\n  console.log(currentName);\r\n  // let currentEmail=document.getElementById(\"email\").innerText;\r\n  this.setState({currentImage:currentImage})\r\n  this.setState({currentName:currentName})\r\n //  this.setState({currentEmail:currentEmail})\r\n  this.setState({popup:true})\r\n}\r\nclosepopup=()=>{\r\n  this.setState({popup:false})\r\n}\r\n componentDidMount() {\r\n    console.log(\"will Mount\");\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(resp=>{\r\n      return resp.json();\r\n    })\r\n    .then(user=>{\r\n     this.setState({robots:user});\r\n    })\r\n  }\r\n\r\nrender(){\r\n  const filteredRobots=this.state.robots.filter(robot=>{\r\n    return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n  })\r\n    return(\r\n      <React.Fragment>\r\n       {this.state.popup? <Popup closepopup={this.closepopup} image={this.state.currentImage} name={this.state.currentName}/>:\"\"}\r\n        <div className=\"main-div\">\r\n            {/*this.state.message mai render() call ho raha hai 2times 1 on page reload and second onclick of user jo maina nahi likha hai(create button apply on click and on onclick change the message)*/}\r\n           <h1>{this.state.message}</h1> \r\n          <Search searchrobo={this.onSearchChange}/>\r\n          <Scroll>\r\n          <CardList robots={filteredRobots} popupwindow={this.popups}/>\r\n          </Scroll>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n}\r\nexport default App;","import React from 'react';\r\nimport './card.css';\r\nimport App from './App'\r\nimport Popup from './Popup'\r\n\r\nconst Card=({name,email,id,popupfun})=>{\r\n    return(  \r\n\r\n      <div className=\"card-container\" onClick={popupfun}>\r\n        <img src={`https://robohash.org/${id}`} alt=\"robotsImage\"/>\r\n          <div className=\"sub-container\">\r\n           <p className=\"name\">{name}</p>\r\n           <p id=\"email\">{email}</p>\r\n          </div>\r\n       </div>\r\n    )\r\n} \r\nexport default Card;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Card from './Card';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Search from './Search'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div>\r\n    <App/>\r\n     \r\n      </div>\r\n  \r\n    {/*<div>\r\n    <Card id={robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n     <Card id={robots[2].id} name={robots[2].name} email={robots[2].email}/>\r\n      <Card id={robots[3].id} name={robots[3].name} email={robots[3].email}/>   \r\n      </div>*/}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}